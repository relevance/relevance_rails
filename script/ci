#!/bin/bash

# Function to sanity-check generators since Rails 3.x does not
# give a non-zero exist code if generators fail
function files_must_exist {
  for checked_file in "$@"; do
    if [ ! -e "$checked_file" ]; then
      echo "'$checked_file' didn't exist!"
      exit 1
    fi
  done
}

# Function to sanity-check generators since Rails 3.x does not
# give a non-zero exist code if generators fail
function files_must_NOT_exist {
  for checked_file in "$@"; do
    if [ -e "$checked_file" ]; then
      echo "'$checked_file' still exists!"
      exit 1
    fi
  done
}

RAILS_APP="app_for_ci"
TARGET_HOST="placeholder.example.com"

# Setup RVM
source "$HOME/.rvm/scripts/rvm"
rvm use "ruby-1.9.2@relevance_rails"
echo "RVM is now using:` rvm current`"

# exit if any statement fails;
# must be set AFTER loading RVM
set -e

gem install bundler
bundle install
bundle exec rake spec

echo "Building new relevance_rails gem..."
rm -Rf relevance_rails-*.gem
gem build --verbose relevance_rails.gemspec
echo "Done"

echo "Ensure we remove any old app directory or gemset..."
rm -Rf ./$RAILS_APP
set +e
rvm --force gemset delete $RAILS_APP
set -e
echo "Done"

relevance_rails new $RAILS_APP --database=postgresql --relevance-dev

# NOTE: this does NOT change the RVM gemset; we set it manually below
builtin cd $RAILS_APP

set +e
rvm gemset use $RAILS_APP
echo "RVM is now using:` rvm current`"
set -e

files_must_NOT_exist public/index.html
files_must_exist config/database.yml provision/dna.json config/deploy.rb config/deploy/recipes/deploy.rb

echo "Generating relevance_rails fixtures..."
./script/rails generate fixtures
git add .
git commit -m "Generated relevance_rails fixtures."
files_must_exist app/assets/javascripts/relevance_rails.js.coffee app/assets/stylesheets/relevance_rails.css.scss
echo "Done."

echo "Generating relevance_rails deployment scripts..."
./script/rails generate deployment staging $TARGET_HOST
git add .
git commit -m "Generated relevance_rails deployment scripts for $TARGET_HOST."
files_must_exist config/deploy/staging.rb
echo "Done."
