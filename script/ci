#!/bin/bash

RAILS_APP="app_for_ci"
TARGET_HOST="placeholder.example.com"

# Setup RVM
source "$HOME/.rvm/scripts/rvm"
rvm gemset use "relevance_rails"

echo "DEBUG: using gemset: `rvm gemset name`"

# exit if any statement fails; 
# must be set AFTER loading RVM
set -e

gem install bundler
bundle install
bundle exec rake spec

echo "Building new relevance_rails gem..."
rm -Rf relevance_rails-*.gem
gem build --verbose relevance_rails.gemspec 
echo "Done"

# NOTE: Manual install of just-built gem to workaround bundler wanting 
# it to live on rubygems.org. 
# NOTE: RVM 1.x doesn't work with "set -e", so you have to unset/set it.
set +e
rvm --force gemset delete $RAILS_APP
rvm gemset create $RAILS_APP
rvm gemset use $RAILS_APP
set -e

if [ `gem list relevance_rails --installed` = "true" ]; then
  echo "Removing old relevance_rails gem..."
  gem uninstall --verbose --all --executables relevance_rails 
  echo "Done"
fi

echo "Installing relevance_rails gem into $RAILS_APP gemset..."
gem install relevance_rails-*.gem 
echo "Done."

rm -Rf ./$RAILS_APP
relevance_rails new $RAILS_APP --database=postgresql

# NOTE: this does NOT change the RVM gemset; we set it manually above
builtin cd $RAILS_APP

for checked_file in public/index.html; do
  if [ -e $checked_file ]; then
    echo "$checked_file still exists!"
    exit 1
  fi
done

for checked_file in config/database.yml provision/dna.json config/deploy.rb config/deploy/recipes/deploy.rb; do
  if [ ! -e $checked_file ]; then
    echo "$checked_file didn't exist!"
    exit 1
  fi
done

echo "Generating relevance_rails deployment scripts..."
./script/rails generate deployment staging $TARGET_HOST
git add .
git commit -m "Generated relevance_rails deployment scripts."
echo "Done."

for checked_file in config/deploy/staging.rb; do
  if [ ! -e $checked_file ]; then
    echo "$checked_file didn't exist!"
    exit 1
  fi
done

echo "Generating relevance_rails fixtures..."
./script/rails generate fixtures
git add .
git commit -m "Generated relevance_rails fixtures."
echo "Done."

for checked_file in app/assets/javascripts/relevance_rails.js.coffee app/assets/stylesheets/relevance_rails.css.scss; do
  if [ ! -e $checked_file ]; then
    echo "$checked_file didn't exist!"
    exit 1
  fi
done

