#!/usr/bin/env bash

# TODO: will need to be able to override some of the ~/.relevance_rails/aws_config.yml
# especially around the starter AMI

RAILS_APP="app_for_ci"

function exit_if_any_statement_fails {
  set -e
}

function build_and_install_gem {
  if [ `gem list relevance_rails --installed` = "true" ]; then
    echo "Removing old relevance_rails gem..."
    gem uninstall --verbose --all --executables relevance_rails 
    echo "Done"
  fi

  echo "Building new relevance_rails gem..."
  rm -Rf relevance_rails-*.gem
  gem build --verbose relevance_rails.gemspec 
  echo "Done"

  gem install --verbose --local relevance_rails-*.gem 
}

function generate_rails_app {
  rm -Rf ./app_for_ci
  relevance_rails new $RAILS_APP --database==postgresql

  cd $RAILS_APP

  ./script/rails generate fixtures
  git add .
  git commit -m "Generated relevance_rails fixtures."

  cd -
}

function provision_and_deploy_rails_app {
  cd $RAILS_APP
  # NOTE: currently, this step will provision an EC2 instance!
  ./script/rails generate deployment staging

  # ---- TODO ----------
  # git add .
  # git commit -m "Generated relevance_rails deployment scripts."

  #TODO: bundle exec cap staging deploy:setup
  # bundle exec cap staging deploy:cold
}

exit_if_any_statement_fails
build_and_install_gem
generate_rails_app
provision_and_deploy_rails_app


