# >---------------------------------------------------------------------------<
# 
#      _____      _                                _____       _ _     
#     |  __ \    | |                              |  __ \     (_) |    
#     | |__) |___| | _____   ____ _ _ __   ___ ___| |__) |__ _ _| |___ 
#     |  _  // _ \ |/ _ \ \ / / _` | '_ \ / __/ _ \  _  // _` | | / __|
#     | | \ \  __/ |  __/\ V / (_| | | | | (_|  __/ | \ \ (_| | | \__ \
#     |_|  \_\___|_|\___| \_/ \__,_|_| |_|\___\___|_|  \_\__,_|_|_|___/
#                                                                      
#                                                                
#   This template was generated by RelevanceRails, the opinionated Rails
#   app generator based on AppScrolls. See links below for details.
#
#     RelevanceRails - https://github.com/relevance/relevance_rails
#     AppScrolls - http://appscrolls.org
#
# >---------------------------------------------------------------------------<

# >----------------------------[ Initial Setup ]------------------------------<

# Create generator initializer which other recipes can rely on
initializer 'generators.rb', <<-RUBY
Rails.application.config.generators do |g|
end
RUBY

@scrolls = <%= resolve_scrolls.map(&:key).inspect %> 
use_git = @scrolls.include?('git')

<%= render "helpers" %>

<% resolve_scrolls.each do |scroll| %>
<%= render 'scroll', scroll.get_binding %>
<% end %>

# >---------------------[ Before Everything Callbacks ]-----------------------<

say_wizard "Running before_everything callbacks."
@before_everything_blocks.each do |b|
  config = @configs[b[0]] || {}; @current_scroll = b[0]; b[1].call
  inside destination_root do
    git_commit("recipe : '#{b.first}'") if use_git
  end
end

<% if custom_code? %>
# >-----------------------------[ Custom Code ]-------------------------------<

<%= custom_code %>
<% end %>

@current_scroll = nil

# >-----------------------------[ Run Bundler ]-------------------------------<

say_wizard "Running Bundler install. This will take a while."
inside destination_root do
  run 'gem install bundler'
  run 'rbenv rehash' if @scrolls.include?('rbenv')
  run 'bundle install'
end

inside destination_root do
  git_commit("bundle install") if use_git
end

# >-----------------------[ After Bundler Callbacks ]-------------------------<

say_wizard "Running after Bundler callbacks."
@after_blocks.each do |b|
  config = @configs[b[0]] || {}; @current_scroll = b[0]; b[1].call
  inside destination_root do
    git_commit("recipe : '#{b.first}'") if use_git
  end
end

# >---------------------[ After Everything Callbacks ]------------------------<
@current_scroll = nil
say_wizard "Running after_everything callbacks."
@after_everything_blocks.each do |b|
  config = @configs[b[0]] || {}; @current_scroll = b[0]; b[1].call
  inside destination_root do
    git_commit("recipe : '#{b.first}'") if use_git
  end
end

